defmodule Quest3 do
  alias AdventOfCode.Grid

  defp input1(:test) do
    """
    ..........
    ..###.##..
    ...####...
    ..######..
    ..######..
    ...####...
    ..........
    """
  end

  defp input1(:real) do
    """
    ..............................
    ..............................
    ..........##..#...............
    .........###.####.............
    ..........########............
    .......#...########...........
    .......##############.........
    ........#############.........
    ........############..........
    .........####.##..##..........
    ..............................
    ..............................
    ..............................
    ..............................
    """
  end

  def part_one(tag) do
    dig_map(input1(tag))
  end

  def dig_map(input, get_neighs \\ &Grid.cardinal4/1) do
    grid =
      Grid.parse_stream(String.split(input, "\n"), fn
        "." -> :ignore
        "#" -> {:ok, 1}
      end)

    grid = dig_loop(grid, 1, get_neighs)

    Grid.print(grid, fn
      nil -> " "
      x -> Integer.to_string(x)
    end)

    Enum.reduce(grid, 0, fn {_, n}, acc -> acc + n end)
  end

  defp dig_loop(grid, cur_level, get_neighs) do
    new_level = cur_level + 1

    grid =
      Map.new(grid, fn
        {xy, ^cur_level} ->
          neighs_xys = get_neighs.(xy)

          if Enum.all?(neighs_xys, &(cur_level == Map.get(grid, &1))) do
            {xy, new_level}
          else
            {xy, cur_level}
          end

        {xy, other_level} ->
          {xy, other_level}
      end)

    if Enum.any?(grid, fn {_, level} -> level == new_level end) do
      dig_loop(grid, new_level, get_neighs)
    else
      grid
    end
  end

  defp input2(:real) do
    """
    ......................................................................
    ............................................##........................
    ....................................##..##..####......................
    ....................................######.#######....................
    .............................#......############......................
    .............................##.....##############....................
    ............................#######################...................
    .......................#....#######################...................
    .......................####.######################....................
    .......................####.######################....................
    ......................############################.#..................
    ......................###############################.................
    .......................############################...................
    ......................#############################...................
    .......................##############################.................
    ........................#############################.................
    .......................###############################................
    .......................############..#################................
    ....................###################################...............
    ......................#################################...............
    .....................#############################....................
    ......................############################....................
    ......................#######################.###.....................
    .....................########################.##......................
    ......................#######################.#.......................
    ........................####################..........................
    ........................###################...........................
    ..........................###..###.##########.........................
    ...........................##...#...##########........................
    ...........................##........########.........................
    ...........................#.........###..##..........................
    .....................................###...#..........................
    ......................................##..............................
    ......................................................................
    ......................................................................
    """
  end

  def part_two(:real), do: dig_map(input2(:real))
  def part_three(:real), do: dig_map(input3(:real), &Grid.cardinal8/1)

  def input3(:real) do
    """
    #################..........................................................................................................###################
    #.################.........................................................................................................#################.#
    ##################.........................................................................................................###################
    ####################......................................................#................................................###################
    ####################..........................................#....#.....###..............................................####################
    ####################..........................................##.##########.........#......................................###################
    ###################.........................................#################.......#....................................#####################
    ###################.........................................#################...#######....................................###################
    ###################........................................##############################..................................###################
    #################........................................#################################.###..............................##################
    ###################......................................##################################.##.............................###################
    ###################......................................######################################...............................################
    ################..........................................####################################..............................##################
    ################........................................#######################################................................###############
    ################...................................#..###########################################............................#################
    ##############.###.................................##############################################..............................###############
    ##############..................................####################################################..........................################
    #############...................................##############################################.#.#.............................###############
    ##############...............................##################################################.................................####.#########
    ###########...................................###.#############################################......................................####.####
    ###########...................................#################################################......................................#.###..##
    ##########.................................####################################################.............................................##
    ....####....................................#####################################################...........................................#.
    ....##.........................................######################......####################...............................................
    ................................................#.##################.######.###################...............................................
    .................................................##################.###..###.##################...............................................
    ................................................###################.###..###.####################.............................................
    .................................................###################.######.###################...............................................
    ...#............................................#####################......#####################..............................................
    ...##....#.......................................###############################################..............................................
    ..###.#..#.......................................##############################################...............................................
    ..##.#######....................................###############################################...............................................
    ############....................................###############################################................................#..#...........
    #############.....................................#########################################...................................##..#....##.....
    ##############.....................................##.####################################...................................####.########....
    ###############....................................#######################################...................................##############...
    ###############....................................#..#####################################....................................#############.#
    ###############..#.................................#...####################################....................................#############.#
    ###################....................................#################################.......................................###############
    ####################....................................################################.......................................###############
    ####################........................................############################......................................################
    #####################......................................###############################.................................###################
    #####################.....................................################################...................................#################
    #####################........................................###########################.....................................#################
    #####################...........................................########################...................................##.################
    #######################.........................................#########..############..................................#####################
    #######################........................................############.##########.....................................###################
    ######################..........................................#########.#####.######.....................................###################
    ########################.........................................##.###.........######.....................................###################
    #######################...........................................#...#..........###.......................................###################
    #.#####################...........................................................#........................................#################.#
    ######################......................................................................................................##################
    """
  end
end

{_, 35} = :timer.tc(fn -> Quest3.part_one(:test) end, :millisecond) |> dbg()
{_, 132} = :timer.tc(fn -> Quest3.part_one(:real) end, :millisecond) |> dbg()
{_, 2532} = :timer.tc(fn -> Quest3.part_two(:real) end, :millisecond) |> dbg()
{_, 10568} = :timer.tc(fn -> Quest3.part_three(:real) end, :millisecond) |> dbg()
